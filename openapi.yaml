openapi: 3.0.3
info:
  title: "Lexaminca Fullstack Assignment"
  version: 1.0.0
paths:
  /categories:
    get:
      summary: Get all categories
      parameters:
        - in: query
          name: count
          schema:
            type: integer
            default: 100
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: sort
          schema:
            type: string
            default: position,asc
      responses:
        "200":
          description: List of categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  categories:
                    type: array
                    items:
                      $ref: "#/components/schemas/CategoryWithTasks"
    post:
      summary: Create a new category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryInput"
      responses:
        "201":
          description: Category created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
  /categories/{id}:
    get:
      summary: Get a category by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Category details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryWithTasks"
        "404":
          description: Category not found
    put:
      summary: Update a category
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryInput"
      responses:
        "200":
          description: Category updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        "404":
          description: Category not found
    delete:
      summary: Delete a category
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Category deleted
        "404":
          description: Category not found
  /tasks:
    get:
      summary: Get all tasks
      parameters:
        - in: query
          name: count
          schema:
            type: integer
            default: 100
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: sort
          schema:
            type: string
            default: position,asc
      responses:
        "200":
          description: List of tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/TaskWithCategory"
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskInput"
      responses:
        "201":
          description: Task created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
  /tasks/{id}:
    get:
      summary: Get a task by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Task details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskWithCategory"
        "404":
          description: Task not found
    put:
      summary: Update a task
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskInput"
      responses:
        "200":
          description: Task updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Task not found
    delete:
      summary: Delete a task
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Task deleted
        "404":
          description: Task not found
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        position:
          type: integer
    CategoryInput:
      type: object
      required:
        - name
        - position
      properties:
        name:
          type: string
        position:
          type: integer
    CategoryWithTasks:
      allOf:
        - $ref: "#/components/schemas/Category"
        - type: object
          properties:
            tasks:
              type: array
              items:
                $ref: "#/components/schemas/TaskWithoutCategory"
    Task:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        position:
          type: integer
    TaskWithoutCategory:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        position:
          type: integer
    TaskInput:
      type: object
      required:
        - name
        - category
        - position
      properties:
        name:
          type: string
        category:
          type: string
        position:
          type: integer
    TaskWithCategory:
      allOf:
        - $ref: "#/components/schemas/Task"
        - type: object
          properties:
            category:
              $ref: "#/components/schemas/Category"
